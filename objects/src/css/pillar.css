@keyframes shake {
  0% {
    transform: translate(1px, 1px) rotate(0deg);
  }
  10% {
    transform: translate(-1px, -2px) rotate(-1deg);
  }
  20% {
    transform: translate(-3px, 0px) rotate(1deg);
  }
  30% {
    transform: translate(3px, 2px) rotate(0deg);
  }
  40% {
    transform: translate(1px, -1px) rotate(1deg);
  }
  50% {
    transform: translate(-1px, 2px) rotate(-1deg);
  }
  60% {
    transform: translate(-3px, 1px) rotate(0deg);
  }
  70% {
    transform: translate(3px, 1px) rotate(-1deg);
  }
  80% {
    transform: translate(-1px, -1px) rotate(1deg);
  }
  90% {
    transform: translate(1px, 2px) rotate(0deg);
  }
  100% {
    transform: translate(1px, -2px) rotate(-1deg);
  }
}
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}
@-webkit-keyframes flash {
  0% {
    opacity: 1;
  }
  50% {
    opacity: .5;
  }
  100% {
    opacity: 1;
  }
}
@keyframes flash {
  0% {
    opacity: 1;
  }
  50% {
    opacity: .5;
  }
  100% {
    opacity: 1;
  }
}
@keyframes methodClick {
  0% {
    top: 0px;
  }
  50% {
    top: 30px;
  }
  100% {
    top: 0px;
  }
}
/* 
    Ok top of every scene we should have a reset local game state, reset parent, reset global.
    On our template for new files we have 

    jsx

    /* todo \r\n x 4 * /
    import * from react as React  
    import underscore

    import any other shit

    export class extends React.Component {



    }

    less files /* todo * /
     


*/
.pillar-region {
  height: 77px;
  width: 50px;
  bottom: 50px;
  left: 25px;
  position: absolute;
}
.pillar-region .visible {
  height: 300px;
  position: relative;
  overflow: hidden;
}
.pillar-region .visible img.pillar {
  display: inline-block;
  height: 282px;
  width: 200px;
  bottom: 0px;
  z-index: 4;
  position: absolute;
}
/*# sourceMappingURL=pillar.css.map */